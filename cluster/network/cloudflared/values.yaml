app-template:
  controllers:
    cloudflared:
      replicas: 3
      strategy: RollingUpdate
      labels:
        app: &app cloudflared
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        cloudflared:
          image:
            repository: docker.io/cloudflare/cloudflared
            tag: 2025.6.1@sha256:175aee7e8b548f983f7e3b79ace217676d2a79255a73c074dacb491e59603679
          env:
            NO_AUTOUPDATE: true
            TUNNEL_CRED_FILE: /etc/cloudflared/creds/credentials.json
            TUNNEL_METRICS: 0.0.0.0:8080
            TUNNEL_ORIGIN_ENABLE_HTTP2: true
            TUNNEL_TRANSPORT_PROTOCOL: quic
            TUNNEL_POST_QUANTUM: true
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - run
            - homelab
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /ready
                  port: &port 8080
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
          resources:
            requests:
              cpu: 10m
            limits:
              memory: 256Mi
  defaultPodOptions:
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      runAsGroup: 65534
      seccompProfile: { type: RuntimeDefault }
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: cloudflared
  service:
    cloudflared:
      controller: *app
      labels:
        app: *app
      ports:
        http:
          port: *port
  serviceMonitor:
    cloudflared:
      serviceName: *app
      endpoints:
        - port: http
          scheme: http
          path: /metrics
          interval: 1m
          scrapeTimeout: 10s
  persistence:
    config:
      type: configMap
      name: cloudflared-configmap
      globalMounts:
        - path: /etc/cloudflared/config/config.yaml
          subPath: config.yaml
          readOnly: true
    creds:
      type: secret
      name: cloudflared-credentials
      globalMounts:
        - path: /etc/cloudflared/creds/credentials.json
          subPath: credentials.json
          readOnly: true
