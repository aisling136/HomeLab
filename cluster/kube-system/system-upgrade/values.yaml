app-template:
  controllers:
    system-upgrade:
      strategy: RollingUpdate
      labels:
        app: &app system-upgrade
      serviceAccount:
        identifier: default
      containers:
        system-upgrade:
          image:
            repository: docker.io/rancher/system-upgrade-controller
            tag: v0.17.0@sha256:7b334b59a48c1653c9f4f18016032255fd874916c78557bc671b7c7877642f1c
          env:
            SYSTEM_UPGRADE_CONTROLLER_DEBUG: false
            SYSTEM_UPGRADE_CONTROLLER_THREADS: 2
            SYSTEM_UPGRADE_JOB_ACTIVE_DEADLINE_SECONDS: 900
            SYSTEM_UPGRADE_JOB_BACKOFF_LIMIT: 99
            SYSTEM_UPGRADE_JOB_IMAGE_PULL_POLICY: IfNotPresent
            SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: registry.k8s.io/kubectl:v1.34.1
            SYSTEM_UPGRADE_JOB_POD_REPLACEMENT_POLICY: Failed
            SYSTEM_UPGRADE_JOB_PRIVILEGED: true
            SYSTEM_UPGRADE_JOB_TTL_SECONDS_AFTER_FINISH: 900
            SYSTEM_UPGRADE_PLAN_POLLING_INTERVAL: 15m
            SYSTEM_UPGRADE_CONTROLLER_NAME: *app
            SYSTEM_UPGRADE_CONTROLLER_NAMESPACE:
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
  defaultPodOptions:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      seccompProfile: { type: RuntimeDefault }
    tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
  serviceAccount:
    default: {}
