app-template:
  controllers:
    plex:
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        app: &app plex
      containers:
        plex:
          image:
            repository: ghcr.io/home-operations/plex
            tag: 1.41.8.9834@sha256:40e620ffcdc65331a0c2a7ed9a95700da7d527244f33c21bd35fc30aa25f19ea
          env:
            TZ: America/New_York
            PLEX_ADVERTISE_URL: https://plex.dex136.xyz,http://192.168.3.244
            PLEX_NO_AUTH_NETWORKS: 192.168.1.0/24,192.168.3.0/24
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /identity
                  port: 32400
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
          resources:
            requests:
              cpu: 100m
            limits:
              gpu.intel.com/i915: 1
              memory: 16Gi
  defaultPodOptions:
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44]
      seccompProfile: { type: RuntimeDefault }
    nodeSelector:
      transcode: "true"
  service:
    plex:
      controller: plex
      type: LoadBalancer
      labels:
        app: *app
      annotations:
        io.cilium/lb-ipam-ips: 192.168.3.244
      ports:
        http:
          port: 32400
  ingress:
    plex:
      className: external
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Plex"
        gethomepage.dev/icon: plex.svg
        gethomepage.dev/group: apps
        external-dns.alpha.kubernetes.io/target: external.dex136.xyz
      hosts:
        - host: "plex.dex136.xyz"
          paths:
            - path: /
              service:
                identifier: *app
                port: http
  persistence:
    config:
      existingClaim: plex
      globalMounts:
      - path: /config/Library/Application Support/Plex Media Server
    cache:
      existingClaim: plex-cache
      globalMounts:
        - path: /config/Library/Application Support/Plex Media Server/Cache
    logs:
      type: emptyDir
      globalMounts:
        - path: /config/Library/Application Support/Plex Media Server/Logs
    tmp:
      type: emptyDir
    transcode:
      type: emptyDir
    media:
      type: nfs
      server: crypt
      path: /mnt/pool0/media
      globalMounts:
        - path: /media
          readOnly: true
