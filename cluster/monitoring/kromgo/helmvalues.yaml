controllers:
  kromgo:
    replicas: 2
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: ghcr.io/kashalls/kromgo
          tag: v0.4.1@sha256:237e6ac3f3bc791343e1ee84122ce9b97abf7eed86cd522d8bf4cba10a041e9f
        env:
          PROMETHEUS_URL: http://vmsingle-vm.monitoring:8429/
          PORT: &port 80
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /-/ready
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 64Mi
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534
    seccompProfile: { type: RuntimeDefault }
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: &app kromgo
service:
  app:
    controller: kromgo
    ports:
      http:
        port: *port
ingress:
  app:
    className: external
    annotations:
      external-dns.alpha.kubernetes.io/target: external.dex136.xyz
    hosts:
      - host: "kromgo.dex136.xyz"
        paths:
          - path: /
            service:
              identifier: app
              port: http
persistence:
  config-file:
    type: configMap
    name: kromgo-configmap
    globalMounts:
      - path: /kromgo/config.yaml
        subPath: config.yaml
        readOnly: true
