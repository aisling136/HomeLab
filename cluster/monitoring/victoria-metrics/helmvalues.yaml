fullnameOverride: vm
experimentalDashboardsEnabled: false
defaultDashboardsEnabled: false
defaultRules:
  groups:
    vmcluster:
      create: false
victoria-metrics-operator:
  operator:
    disable_prometheus_converter: false
    prometheus_converter_add_argocd_ignore_annotations: true
    enable_converter_ownership: true
grafana:
  enabled: false
alertmanager:
  spec:
    configSecret: alertmanager-secret
    externalURL: https://alertmanager.dex136.xyz
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: monitoring
          resources:
            requests:
              storage: 5Gi
  ingress:
    enabled: true
    ingressClassName: internal
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/icon: alertmanager.svg
      gethomepage.dev/name: "Alert Manager"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name in (
            vmalertmanager
        )
    hosts:
      - alertmanager.dex136.xyz
vmsingle:
  spec:
    retentionPeriod: "30d"
    storage:
      storageClassName: monitoring
      resources:
        requests:
          storage: 50Gi
    resources:
      limits:
        memory: 2Gi
      requests:
        cpu: 1
        memory: 960Mi
  ingress:
    enabled: true
    hosts:
    - vm.dex136.xyz
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/icon: si-victoriametrics-#621773
      gethomepage.dev/group: Monitoring
      gethomepage.dev/name: "Victoria Metrics"
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name in (
            vmsingle
        )
  serviceMonitor:
    enabled: true
vmalert:
  ingress:
    enabled: true
    hosts:
    - va.dex136.xyz
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/icon: si-victoriametrics-#621773
      gethomepage.dev/group: Monitoring
      gethomepage.dev/name: "Victoria Metrics Alert"
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name in (
            vmalert
        )
  spec:
    extraArgs:
      external.url: https://vm.dex136.xyz
      external.alert.source: vmui/#/?g0.expr={{ "{{" }}.Expr|queryEscape{{ "}}" }}
vmagent:
  spec:
    externalLabels:
      cluster: homelab
    scrapeInterval: 60s
    resources:
      limits:
        cpu: 1
        memory: 500Mi
      requests:
        cpu: 500m
        memory: 100Mi
  ingress:
    enabled: true
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/icon: si-victoriametrics-#621773
      gethomepage.dev/group: Monitoring
      gethomepage.dev/name: "Victoria Metrics Agent"
      gethomepage.dev/pod-selector: >-
        app.kubernetes.io/name in (
            vmagent
        )
    hosts:
    - vma.dex136.xyz
kubelet:
  spec:
    interval: 60s
    # drop high cardinality label and useless metrics for cadvisor and kubelet
    metricRelabelConfigs:
      - action: labeldrop
        regex: (uid|pod_uid|id)
      - action: labeldrop
        regex: (name)
      - action: drop
        source_labels: [__name__]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    relabelConfigs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - sourceLabels: [__metrics_path__]
        targetLabel: metrics_path
      - targetLabel: "job"
        replacement: "kubelet"
  enabled: true
kubeEtcd:
  enabled: true
  endpoints: &endpoints
    - 192.168.1.231
    - 192.168.1.232
    - 192.168.1.233
  vmScrape:
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: http
          tlsConfig:
            insecureSkipVerify: true
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  service:
    enabled: true
    port: 2381
    targetPort: 2381
kubeControllerManager:
  enabled: true
  endpoints: *endpoints
  service:
    enabled: true
    port: 10257
    targetPort: 10257
  vmScrape:
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            insecureSkipVerify: true
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
kubeProxy:
  enabled: false
kubeScheduler:
  enabled: true
  endpoints: *endpoints
  service:
    enabled: true
    port: 10259
    targetPort: 10259
  vmScrape:
    spec:
      jobLabel: jobLabel
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            insecureSkipVerify: true
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
kubeApiServer:
  enabled: true
prometheus-node-exporter:
  enabled: true
kube-state-metrics:
  enabled: true
