apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 2
  labels:
    app.kubernetes.io/instance: external-dns-pihole
    app.kubernetes.io/name: external-dns-pihole
    app.kubernetes.io/version: 0.14.0
  name: external-dns-pihole
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: external-dns-pihole
      app.kubernetes.io/name: external-dns-pihole
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: external-dns-pihole
        app.kubernetes.io/name: external-dns-pihole
    spec:
      containers:
        - args:
            - '--log-level=info'
            - '--log-format=text'
            - '--interval=5m'
            - '--events'
            - '--source=service'
            - '--source=ingress'
            - '--policy=upsert-only'
            - '--registry=txt'
            - '--txt-owner-id=homelab'
            - '--provider=pihole'
            - '--pihole-server=http://192.168.1.230:32500'
            - '--pihole-tls-skip-verify'
            - >-
              --annotation-filter=external-dns.alpha.kubernetes.io/exclude notin
              (true)
          envFrom:
          - secretRef:
              name: pihole-password
          image: 'registry.k8s.io/external-dns/external-dns:v0.14.0'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: external-dns
          ports:
            - containerPort: 7979
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: external-dns
      serviceAccountName: external-dns
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: external-dns-pihole
    app.kubernetes.io/name: external-dns-pihole
    app.kubernetes.io/version: 0.14.0
  name: external-dns-pihole
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 7979
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: external-dns-pihole
    app.kubernetes.io/name: external-dns-pihole
  sessionAffinity: None
  type: ClusterIP
